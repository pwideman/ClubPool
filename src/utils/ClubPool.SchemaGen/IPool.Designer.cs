//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Divisions_Seasons", "Seasons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.Season), "Divisions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Division), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Matches_Divisions", "Divisions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.Division), "Matches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Match), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Teams_Divisions", "Divisions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.Division), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Team), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Matches_aspnet_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.User), "Matches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Match), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Matches_aspnet_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.User), "Matches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Match), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Matches_aspnet_Users2", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClubPool.SchemaGen.User), "Matches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Match), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Matches_Seasons", "Seasons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.Season), "Matches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Match), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Matches_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.Team), "Matches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Match), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Matches_Teams1", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.Team), "Matches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Match), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Teams_Seasons", "Seasons", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ClubPool.SchemaGen.Season), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Team), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Teams_aspnet_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.User), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Team), true)]
[assembly: EdmRelationshipAttribute("ipoolModel", "FK_Teams_aspnet_Users1", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClubPool.SchemaGen.User), "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClubPool.SchemaGen.Team), true)]

#endregion

namespace ClubPool.SchemaGen
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ipoolEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ipoolEntities object using the connection string found in the 'ipoolEntities' section of the application configuration file.
        /// </summary>
        public ipoolEntities() : base("name=ipoolEntities", "ipoolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ipoolEntities object.
        /// </summary>
        public ipoolEntities(string connectionString) : base(connectionString, "ipoolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ipoolEntities object.
        /// </summary>
        public ipoolEntities(EntityConnection connection) : base(connection, "ipoolEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Division> Divisions
        {
            get
            {
                if ((_Divisions == null))
                {
                    _Divisions = base.CreateObjectSet<Division>("Divisions");
                }
                return _Divisions;
            }
        }
        private ObjectSet<Division> _Divisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Match> Matches
        {
            get
            {
                if ((_Matches == null))
                {
                    _Matches = base.CreateObjectSet<Match>("Matches");
                }
                return _Matches;
            }
        }
        private ObjectSet<Match> _Matches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Season> Seasons
        {
            get
            {
                if ((_Seasons == null))
                {
                    _Seasons = base.CreateObjectSet<Season>("Seasons");
                }
                return _Seasons;
            }
        }
        private ObjectSet<Season> _Seasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Divisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDivisions(Division division)
        {
            base.AddObject("Divisions", division);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Matches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMatches(Match match)
        {
            base.AddObject("Matches", match);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Seasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeasons(Season season)
        {
            base.AddObject("Seasons", season);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ipoolModel", Name="Division")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Division : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Division object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="dateOffset">Initial value of the DateOffset property.</param>
        public static Division CreateDivision(global::System.Int32 id, global::System.String description, global::System.Int32 seasonId, global::System.Int32 dateOffset)
        {
            Division division = new Division();
            division.ID = id;
            division.Description = description;
            division.SeasonId = seasonId;
            division.DateOffset = dateOffset;
            return division;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                OnSeasonIdChanging(value);
                ReportPropertyChanging("SeasonId");
                _SeasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonId");
                OnSeasonIdChanged();
            }
        }
        private global::System.Int32 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int32 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DateOffset
        {
            get
            {
                return _DateOffset;
            }
            set
            {
                OnDateOffsetChanging(value);
                ReportPropertyChanging("DateOffset");
                _DateOffset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOffset");
                OnDateOffsetChanged();
            }
        }
        private global::System.Int32 _DateOffset;
        partial void OnDateOffsetChanging(global::System.Int32 value);
        partial void OnDateOffsetChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Divisions_Seasons", "Seasons")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ipoolModel.FK_Divisions_Seasons", "Seasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ipoolModel.FK_Divisions_Seasons", "Seasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ipoolModel.FK_Divisions_Seasons", "Seasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("ipoolModel.FK_Divisions_Seasons", "Seasons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_Divisions", "Matches")]
        public EntityCollection<Match> Matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("ipoolModel.FK_Matches_Divisions", "Matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("ipoolModel.FK_Matches_Divisions", "Matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Teams_Divisions", "Teams")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("ipoolModel.FK_Teams_Divisions", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("ipoolModel.FK_Teams_Divisions", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ipoolModel", Name="Match")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Match : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Match object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="team1Id">Initial value of the Team1Id property.</param>
        /// <param name="team2Id">Initial value of the Team2Id property.</param>
        /// <param name="player1Id">Initial value of the Player1Id property.</param>
        /// <param name="player2Id">Initial value of the Player2Id property.</param>
        /// <param name="player1Innings">Initial value of the Player1Innings property.</param>
        /// <param name="player2Innings">Initial value of the Player2Innings property.</param>
        /// <param name="player1Wins">Initial value of the Player1Wins property.</param>
        /// <param name="player2Wins">Initial value of the Player2Wins property.</param>
        /// <param name="isCompleted">Initial value of the IsCompleted property.</param>
        /// <param name="week">Initial value of the Week property.</param>
        public static Match CreateMatch(global::System.Int32 id, global::System.Int32 seasonId, global::System.Int32 divisionId, global::System.Int32 team1Id, global::System.Int32 team2Id, global::System.Int32 player1Id, global::System.Int32 player2Id, global::System.Int32 player1Innings, global::System.Int32 player2Innings, global::System.Int32 player1Wins, global::System.Int32 player2Wins, global::System.Boolean isCompleted, global::System.Int32 week)
        {
            Match match = new Match();
            match.ID = id;
            match.SeasonId = seasonId;
            match.DivisionId = divisionId;
            match.Team1Id = team1Id;
            match.Team2Id = team2Id;
            match.Player1Id = player1Id;
            match.Player2Id = player2Id;
            match.Player1Innings = player1Innings;
            match.Player2Innings = player2Innings;
            match.Player1Wins = player1Wins;
            match.Player2Wins = player2Wins;
            match.IsCompleted = isCompleted;
            match.Week = week;
            return match;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                OnSeasonIdChanging(value);
                ReportPropertyChanging("SeasonId");
                _SeasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonId");
                OnSeasonIdChanged();
            }
        }
        private global::System.Int32 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int32 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private global::System.Int32 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int32 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team1Id
        {
            get
            {
                return _Team1Id;
            }
            set
            {
                OnTeam1IdChanging(value);
                ReportPropertyChanging("Team1Id");
                _Team1Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team1Id");
                OnTeam1IdChanged();
            }
        }
        private global::System.Int32 _Team1Id;
        partial void OnTeam1IdChanging(global::System.Int32 value);
        partial void OnTeam1IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Team2Id
        {
            get
            {
                return _Team2Id;
            }
            set
            {
                OnTeam2IdChanging(value);
                ReportPropertyChanging("Team2Id");
                _Team2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team2Id");
                OnTeam2IdChanged();
            }
        }
        private global::System.Int32 _Team2Id;
        partial void OnTeam2IdChanging(global::System.Int32 value);
        partial void OnTeam2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player1Id
        {
            get
            {
                return _Player1Id;
            }
            set
            {
                OnPlayer1IdChanging(value);
                ReportPropertyChanging("Player1Id");
                _Player1Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player1Id");
                OnPlayer1IdChanged();
            }
        }
        private global::System.Int32 _Player1Id;
        partial void OnPlayer1IdChanging(global::System.Int32 value);
        partial void OnPlayer1IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player2Id
        {
            get
            {
                return _Player2Id;
            }
            set
            {
                OnPlayer2IdChanging(value);
                ReportPropertyChanging("Player2Id");
                _Player2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player2Id");
                OnPlayer2IdChanged();
            }
        }
        private global::System.Int32 _Player2Id;
        partial void OnPlayer2IdChanging(global::System.Int32 value);
        partial void OnPlayer2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WinnerId
        {
            get
            {
                return _WinnerId;
            }
            set
            {
                OnWinnerIdChanging(value);
                ReportPropertyChanging("WinnerId");
                _WinnerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WinnerId");
                OnWinnerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WinnerId;
        partial void OnWinnerIdChanging(Nullable<global::System.Int32> value);
        partial void OnWinnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player1Innings
        {
            get
            {
                return _Player1Innings;
            }
            set
            {
                OnPlayer1InningsChanging(value);
                ReportPropertyChanging("Player1Innings");
                _Player1Innings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player1Innings");
                OnPlayer1InningsChanged();
            }
        }
        private global::System.Int32 _Player1Innings;
        partial void OnPlayer1InningsChanging(global::System.Int32 value);
        partial void OnPlayer1InningsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player2Innings
        {
            get
            {
                return _Player2Innings;
            }
            set
            {
                OnPlayer2InningsChanging(value);
                ReportPropertyChanging("Player2Innings");
                _Player2Innings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player2Innings");
                OnPlayer2InningsChanged();
            }
        }
        private global::System.Int32 _Player2Innings;
        partial void OnPlayer2InningsChanging(global::System.Int32 value);
        partial void OnPlayer2InningsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player1Wins
        {
            get
            {
                return _Player1Wins;
            }
            set
            {
                OnPlayer1WinsChanging(value);
                ReportPropertyChanging("Player1Wins");
                _Player1Wins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player1Wins");
                OnPlayer1WinsChanged();
            }
        }
        private global::System.Int32 _Player1Wins;
        partial void OnPlayer1WinsChanging(global::System.Int32 value);
        partial void OnPlayer1WinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player2Wins
        {
            get
            {
                return _Player2Wins;
            }
            set
            {
                OnPlayer2WinsChanging(value);
                ReportPropertyChanging("Player2Wins");
                _Player2Wins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player2Wins");
                OnPlayer2WinsChanged();
            }
        }
        private global::System.Int32 _Player2Wins;
        partial void OnPlayer2WinsChanging(global::System.Int32 value);
        partial void OnPlayer2WinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCompleted
        {
            get
            {
                return _IsCompleted;
            }
            set
            {
                OnIsCompletedChanging(value);
                ReportPropertyChanging("IsCompleted");
                _IsCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompleted");
                OnIsCompletedChanged();
            }
        }
        private global::System.Boolean _IsCompleted;
        partial void OnIsCompletedChanging(global::System.Boolean value);
        partial void OnIsCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Week
        {
            get
            {
                return _Week;
            }
            set
            {
                OnWeekChanging(value);
                ReportPropertyChanging("Week");
                _Week = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Week");
                OnWeekChanged();
            }
        }
        private global::System.Int32 _Week;
        partial void OnWeekChanging(global::System.Int32 value);
        partial void OnWeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DatePlayed
        {
            get
            {
                return _DatePlayed;
            }
            set
            {
                OnDatePlayedChanging(value);
                ReportPropertyChanging("DatePlayed");
                _DatePlayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePlayed");
                OnDatePlayedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DatePlayed;
        partial void OnDatePlayedChanging(Nullable<global::System.DateTime> value);
        partial void OnDatePlayedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_Divisions", "Divisions")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("ipoolModel.FK_Matches_Divisions", "Divisions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("ipoolModel.FK_Matches_Divisions", "Divisions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("ipoolModel.FK_Matches_Divisions", "Divisions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("ipoolModel.FK_Matches_Divisions", "Divisions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_aspnet_Users", "Users")]
        public User Player1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> Player1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_aspnet_Users1", "Users")]
        public User Player2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> Player2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users1", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_aspnet_Users2", "Users")]
        public User Winner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users2", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users2", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> WinnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users2", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ipoolModel.FK_Matches_aspnet_Users2", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_Seasons", "Seasons")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ipoolModel.FK_Matches_Seasons", "Seasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ipoolModel.FK_Matches_Seasons", "Seasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ipoolModel.FK_Matches_Seasons", "Seasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("ipoolModel.FK_Matches_Seasons", "Seasons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_Teams", "Teams")]
        public Team Team1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("ipoolModel.FK_Matches_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("ipoolModel.FK_Matches_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> Team1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("ipoolModel.FK_Matches_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("ipoolModel.FK_Matches_Teams", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_Teams1", "Teams")]
        public Team Team2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("ipoolModel.FK_Matches_Teams1", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("ipoolModel.FK_Matches_Teams1", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> Team2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("ipoolModel.FK_Matches_Teams1", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("ipoolModel.FK_Matches_Teams1", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ipoolModel", Name="Season")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Season : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Season object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Season CreateSeason(global::System.Int32 id, global::System.Int16 year, global::System.Boolean isActive)
        {
            Season season = new Season();
            season.ID = id;
            season.Year = year;
            season.IsActive = isActive;
            return season;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int16 _Year;
        partial void OnYearChanging(global::System.Int16 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Divisions_Seasons", "Divisions")]
        public EntityCollection<Division> Divisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Division>("ipoolModel.FK_Divisions_Seasons", "Divisions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Division>("ipoolModel.FK_Divisions_Seasons", "Divisions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_Seasons", "Matches")]
        public EntityCollection<Match> Matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("ipoolModel.FK_Matches_Seasons", "Matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("ipoolModel.FK_Matches_Seasons", "Matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Teams_Seasons", "Teams")]
        public EntityCollection<Team> Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("ipoolModel.FK_Teams_Seasons", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("ipoolModel.FK_Teams_Seasons", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ipoolModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="player1ID">Initial value of the Player1ID property.</param>
        /// <param name="player2ID">Initial value of the Player2ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        public static Team CreateTeam(global::System.Int32 id, global::System.Int32 player1ID, global::System.Int32 player2ID, global::System.String name, global::System.Int32 divisionId, global::System.Int32 priority)
        {
            Team team = new Team();
            team.ID = id;
            team.Player1ID = player1ID;
            team.Player2ID = player2ID;
            team.Name = name;
            team.DivisionId = divisionId;
            team.Priority = priority;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player1ID
        {
            get
            {
                return _Player1ID;
            }
            set
            {
                OnPlayer1IDChanging(value);
                ReportPropertyChanging("Player1ID");
                _Player1ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player1ID");
                OnPlayer1IDChanged();
            }
        }
        private global::System.Int32 _Player1ID;
        partial void OnPlayer1IDChanging(global::System.Int32 value);
        partial void OnPlayer1IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player2ID
        {
            get
            {
                return _Player2ID;
            }
            set
            {
                OnPlayer2IDChanging(value);
                ReportPropertyChanging("Player2ID");
                _Player2ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Player2ID");
                OnPlayer2IDChanged();
            }
        }
        private global::System.Int32 _Player2ID;
        partial void OnPlayer2IDChanging(global::System.Int32 value);
        partial void OnPlayer2IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private global::System.Int32 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int32 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeasonIid
        {
            get
            {
                return _SeasonIid;
            }
            set
            {
                OnSeasonIidChanging(value);
                ReportPropertyChanging("SeasonIid");
                _SeasonIid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonIid");
                OnSeasonIidChanged();
            }
        }
        private Nullable<global::System.Int32> _SeasonIid;
        partial void OnSeasonIidChanging(Nullable<global::System.Int32> value);
        partial void OnSeasonIidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Teams_Divisions", "Divisions")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("ipoolModel.FK_Teams_Divisions", "Divisions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("ipoolModel.FK_Teams_Divisions", "Divisions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("ipoolModel.FK_Teams_Divisions", "Divisions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("ipoolModel.FK_Teams_Divisions", "Divisions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_Teams", "Matches")]
        public EntityCollection<Match> Team1Matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("ipoolModel.FK_Matches_Teams", "Matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("ipoolModel.FK_Matches_Teams", "Matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_Teams1", "Matches")]
        public EntityCollection<Match> Team2Matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("ipoolModel.FK_Matches_Teams1", "Matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("ipoolModel.FK_Matches_Teams1", "Matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Teams_Seasons", "Seasons")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ipoolModel.FK_Teams_Seasons", "Seasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ipoolModel.FK_Teams_Seasons", "Seasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("ipoolModel.FK_Teams_Seasons", "Seasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("ipoolModel.FK_Teams_Seasons", "Seasons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Teams_aspnet_Users", "Users")]
        public User Player1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Teams_aspnet_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Teams_aspnet_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> Player1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Teams_aspnet_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ipoolModel.FK_Teams_aspnet_Users", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Teams_aspnet_Users1", "Users")]
        public User Player2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Teams_aspnet_Users1", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Teams_aspnet_Users1", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> Player2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ipoolModel.FK_Teams_aspnet_Users1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ipoolModel.FK_Teams_aspnet_Users1", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ipoolModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String userName)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Handicap
        {
            get
            {
                return _Handicap;
            }
            set
            {
                OnHandicapChanging(value);
                ReportPropertyChanging("Handicap");
                _Handicap = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Handicap");
                OnHandicapChanged();
            }
        }
        private Nullable<global::System.Int32> _Handicap;
        partial void OnHandicapChanging(Nullable<global::System.Int32> value);
        partial void OnHandicapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_aspnet_Users", "Matches")]
        public EntityCollection<Match> Player1Matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("ipoolModel.FK_Matches_aspnet_Users", "Matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("ipoolModel.FK_Matches_aspnet_Users", "Matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_aspnet_Users1", "Matches")]
        public EntityCollection<Match> Player2Matches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("ipoolModel.FK_Matches_aspnet_Users1", "Matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("ipoolModel.FK_Matches_aspnet_Users1", "Matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Matches_aspnet_Users2", "Matches")]
        public EntityCollection<Match> WinnerMatches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Match>("ipoolModel.FK_Matches_aspnet_Users2", "Matches");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Match>("ipoolModel.FK_Matches_aspnet_Users2", "Matches", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Teams_aspnet_Users", "Teams")]
        public EntityCollection<Team> Player1Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("ipoolModel.FK_Teams_aspnet_Users", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("ipoolModel.FK_Teams_aspnet_Users", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ipoolModel", "FK_Teams_aspnet_Users1", "Teams")]
        public EntityCollection<Team> Player2Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team>("ipoolModel.FK_Teams_aspnet_Users1", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team>("ipoolModel.FK_Teams_aspnet_Users1", "Teams", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
